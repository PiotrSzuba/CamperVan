// <auto-generated />
using System;
using CamperVan.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CamperVan.Migrations
{
    [DbContext(typeof(CamperVanContext))]
    [Migration("20220624184935_timestamp_test2")]
    partial class timestamp_test2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CamperVan.Models.AirCondition", b =>
                {
                    b.Property<int>("AirConditionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirConditionId"), 1L, 1);

                    b.Property<int>("BathroomAirConditionPower")
                        .HasColumnType("int");

                    b.Property<bool>("BathroomAirConditionStatus")
                        .HasColumnType("bit");

                    b.Property<int>("BathroomConditionTemperature")
                        .HasColumnType("int");

                    b.Property<int>("MainAirConditionPower")
                        .HasColumnType("int");

                    b.Property<bool>("MainAirConditionStatus")
                        .HasColumnType("bit");

                    b.Property<int>("MainAirConditionTemperature")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("AirConditionId");

                    b.ToTable("AirCondition");
                });

            modelBuilder.Entity("CamperVan.Models.Consumption", b =>
                {
                    b.Property<int>("ConsumptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsumptionId"), 1L, 1);

                    b.Property<int>("Boiler")
                        .HasColumnType("int");

                    b.Property<int>("Fridge")
                        .HasColumnType("int");

                    b.Property<int>("Heating")
                        .HasColumnType("int");

                    b.Property<int>("Lights")
                        .HasColumnType("int");

                    b.Property<int>("Other")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("ConsumptionId");

                    b.ToTable("Consumption");
                });

            modelBuilder.Entity("CamperVan.Models.Energy", b =>
                {
                    b.Property<int>("EnergyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnergyId"), 1L, 1);

                    b.Property<bool>("Alternator")
                        .HasColumnType("bit");

                    b.Property<int>("BatteryLevel")
                        .HasColumnType("int");

                    b.Property<bool>("Converter")
                        .HasColumnType("bit");

                    b.Property<bool>("ExternalPower")
                        .HasColumnType("bit");

                    b.Property<bool>("Solar")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("EnergyId");

                    b.ToTable("Energy");
                });

            modelBuilder.Entity("CamperVan.Models.Gas", b =>
                {
                    b.Property<int>("GasId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GasId"), 1L, 1);

                    b.Property<bool>("Boiler")
                        .HasColumnType("bit");

                    b.Property<bool>("Fridge")
                        .HasColumnType("bit");

                    b.Property<bool>("Stove")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Valve")
                        .HasColumnType("bit");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("GasId");

                    b.ToTable("Gas");
                });

            modelBuilder.Entity("CamperVan.Models.Heating", b =>
                {
                    b.Property<int>("HeatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HeatingId"), 1L, 1);

                    b.Property<bool>("ElectricHeating")
                        .HasColumnType("bit");

                    b.Property<bool>("FloorHeating")
                        .HasColumnType("bit");

                    b.Property<bool>("FuelHeating")
                        .HasColumnType("bit");

                    b.Property<int>("IndoorTemp")
                        .HasColumnType("int");

                    b.Property<int>("OutdoorTemp")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("HeatingId");

                    b.ToTable("Heating");
                });

            modelBuilder.Entity("CamperVan.Models.Led", b =>
                {
                    b.Property<int>("LedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LedId"), 1L, 1);

                    b.Property<int>("Brightness")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("LedId");

                    b.ToTable("Leds");
                });

            modelBuilder.Entity("CamperVan.Models.Lights", b =>
                {
                    b.Property<int>("LightsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LightsId"), 1L, 1);

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("LightsId");

                    b.ToTable("Lights");
                });

            modelBuilder.Entity("CamperVan.Models.Mode", b =>
                {
                    b.Property<int>("ModeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModeId"), 1L, 1);

                    b.Property<bool>("Cameras")
                        .HasColumnType("bit");

                    b.Property<bool>("ColdBoiler")
                        .HasColumnType("bit");

                    b.Property<bool>("DimLights")
                        .HasColumnType("bit");

                    b.Property<bool>("HeatSaving")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("ModeId");

                    b.ToTable("Modes");
                });

            modelBuilder.Entity("CamperVan.Models.SolarPanel", b =>
                {
                    b.Property<int>("SolarPanelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SolarPanelId"), 1L, 1);

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("Voltage")
                        .HasColumnType("int");

                    b.HasKey("SolarPanelId");

                    b.ToTable("SolarPanel");
                });

            modelBuilder.Entity("CamperVan.Models.Water", b =>
                {
                    b.Property<int>("WaterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WaterId"), 1L, 1);

                    b.Property<int>("CleanTank")
                        .HasColumnType("int");

                    b.Property<bool>("Pump")
                        .HasColumnType("bit");

                    b.Property<bool>("Shower")
                        .HasColumnType("bit");

                    b.Property<bool>("Sink")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Timestamp2")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Toilet")
                        .HasColumnType("bit");

                    b.Property<int>("WasteTank")
                        .HasColumnType("int");

                    b.HasKey("WaterId");

                    b.ToTable("Water");
                });

            modelBuilder.Entity("CamperVan.Models.Weather", b =>
                {
                    b.Property<int>("WeatherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WeatherId"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Humidity")
                        .HasColumnType("int");

                    b.Property<int>("Temperature")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("WeatherId");

                    b.ToTable("Weather");
                });
#pragma warning restore 612, 618
        }
    }
}
